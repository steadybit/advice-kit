openapi: 3.1.0
info:
  title: Steadybit AdviceKit API
  version: 1.0.0
  license:
    name: MIT
    identifier: MIT
consumes:
  - application/json
produces:
  - application/json
components:
  schemas:
    AdviceList:
      title: Advice List
      description: Lists all advice that the platform/agent could consume.
      type: object
      properties:
        advice:
          type: array
          items:
            $ref: '#/components/schemas/DescribingEndpointReference'
          uniqueItems: true
      required:
        - advice
    AdviceDefinition:
      title: Advice Description
      description: Provides details about a advice
      type: object
      properties:
        id:
          type: string
          description: "A technical ID that is used to uniquely identify this type of advice. You will typically want to use something like `org.example.extension.my-fancy-advice`."
        version:
          type: string
          description: "The version of the advice. This is used to identify the version of the advice and is used for compatibility checks."
        label:
          type: string
          description: "A human-readable label for the advice."
        icon:
          type: string
          description: "A svg of an icon that represents the advice."
        assessmentQueryApplicable:
          type: string
          description: "A Assessment Target Base Query that is used identifies targets that could have this advice."
        tags:
          type: array
          items:
              type: string
          uniqueItems: true
          description: "A list of tags that describe the advice."
        status:
          $ref: '#/components/schemas/AdviceDefinitionStatus'

      required:
        - id
        - version
        - label
        - icon
        - assessmentQueryApplicable
        - assessmentQueryActionNeeded
        - description


    Validation:
      title: Advice Validation
      description: Provides a either a template about a advice experiment or a textual validation like a checklist item
      type: object
      properties:
        id:
          type: string
          description: "A technical ID that is used to uniquely identify this validation. You will typically want to use something like `org.example.extension.my-fancy-advice-validation.1`."
        name:
          type: string
          description: "A human-readable name for the validation."
        description:
          type: string
          description: "A human-readable description for the validation or for the experiment template."
        type:
          type: string
          description: "The type of the validation. Either `experiment` or `text`."
        experiment:
          $ref: '#/components/schemas/Experiment'
      required:
        - id
        - name
        - description
        - type

    Experiment:
      title: Advice Experiment
      description: Provides a experiment json exported from the ui
      ref: any

    AdviceDefinitionStatus:
      title: Advice Description
      description: Provides details about a advice
      type: object
      properties:
        actionNeeded:
          $ref: '#/components/schemas/AdviceDefinitionStatusActionNeeded'
        validationNeeded:
          $ref: '#/components/schemas/AdviceDefinitionStatusValidationNeeded'
        implemented:
          $ref: '#/components/schemas/AdviceDefinitionStatusImplemented'
      required:
        - actionNeeded
        - validationNeeded
        - implemented

    AdviceDefinitionStatusActionNeeded:
      title: Action Needed
      description: Provides details about a advice lifecycle status actions needed
      type: object
      properties:
        assessmentQuery:
          type: string
          description: "A Assessment Target Query Addon that is used to identify targets with this advice in the target list of the assessmentQueryApplicable"
        description:
          $ref: '#/components/schemas/AdviceDefinitionStatusActionNeededDescription'
      required:
        - assessmentQuery
        - description

    AdviceDefinitionStatusActionNeededDescription:
        title: Action Needed Description
        description: Provides details description about a advice lifecycle status actions needed
        type: object
        properties:
          summary:
            type: string
            description: "A human-readable summary of the action needed in mark down format. (you can use placeholder like ${target.k8s.pod.name})"
          motivation:
            type: string
            description: "A human-readable motivation of the action needed in mark down format. (you can use placeholder like ${target.k8s.pod.name})"
          instruction:
            type: string
            description: "A human-readable instructions of the action needed in mark down format. (you can use placeholder like ${target.k8s.pod.name})"
        required:
            - summary
            - motivation
            - instruction

    AdviceDefinitionStatusValidationNeeded:
      title: Validation Needed
      description: Provides details about a advice lifecycle status validation needed
      type: object
      properties:
        description:
          $ref: '#/components/schemas/AdviceDefinitionStatusValidationNeededDescription'
        validation:
          type: array
          items:
            $ref: '#/components/schemas/Validation'
          uniqueItems: true
          description: "A list of validations that are available for this advice."
      required:
        - description

    AdviceDefinitionStatusValidationNeededDescription:
      title: Validation Needed Description
      description: Provides details description about a advice lifecycle status validation needed
      type: object
      properties:
        summary:
          type: string
          description: "A human-readable summary of the validation needed in mark down format. (you can use placeholder like ${target.k8s.pod.name})"
      required:
        - summary

    AdviceDefinitionStatusImplemented:
      title: Status Implemented
      description: Provides details about a advice lifecycle status implemented
      type: object
      properties:
        description:
          $ref: '#/components/schemas/AdviceDefinitionStatusImplementedDescription'
      required:
        - description


    AdviceDefinitionStatusImplementedDescription:
      title: Status Implemented Description
      description: Provides details description about a advice lifecycle status implemented
      type: object
      properties:
        summary:
          type: string
          description: "A human-readable summary of the implemented in mark down format. (you can use placeholder like ${target.k8s.pod.name})"
      required:
        - summary

    DescribingEndpointReference:
      title: HTTP Endpoint Reference
      description: HTTP endpoint which the Steadybit platform/agent could communicate with.
      properties:
        path:
          description: Absolute path of the HTTP endpoint.
          type: string
          pattern: ^/.*$
        method:
          description: HTTP method to use when calling the HTTP endpoint.
          type: string
          enum:
            - GET
      required:
        - path
        - method
    AdviceKitError:
      title: Error
      description: >-
        RFC 7807 Problem Details for HTTP APIs compliant response body for error
        scenarios
      properties:
        type:
          type: string
          description: A URI reference that identifies the problem type.
        title:
          type: string
          description: 'A short, human-readable summary of the problem type.'
        detail:
          type: string
          description: >-
            A human-readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          description: >-
            A URI reference that identifies the specific occurrence of the
            problem.
      required:
        - title
  responses:
    AdviceListResponse:
      title: Advice List Response
      description: Response for the advice list endpoint
      content:
        application/json:
          schema:
            anyOf:
              - $ref: '#/components/schemas/AdviceList'
              - $ref: '#/components/schemas/AdviceKitError'
    AdviceDefinitionResponse:
      title: Describe Advice Response
      description: Response for the describe advice endpoint
      content:
        application/json:
          schema:
            anyOf:
              - $ref: '#/components/schemas/AdviceDefinition'
              - $ref: '#/components/schemas/AdviceKitError'
